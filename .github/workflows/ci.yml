name: Terraform CI

on:
  push:
    branches: [ main, feature/** ]
    paths: [ 'terraform/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'terraform/**' ]
  workflow_dispatch:

env:
  TF_WORKING_DIR: terraform
  AWS_REGION: us-east-1

# Prevent concurrent applies to the same branch
concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: false

jobs:
  fmt_validate:
    name: fmt & validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform fmt
        run: terraform fmt -check -recursive

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

  plan:
    name: plan (dev)
    needs: fmt_validate
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    permissions:
      id-token: write   # for OIDC
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Configure AWS credentials via OIDC (recommended)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }} # set this in repo secrets

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform plan (dev)
        run: terraform plan -input=false -no-color -var-file="environments/dev.tfvars" -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}/tfplan
          if-no-files-found: error

  apply:
    name: apply (dev)
    needs: [fmt_validate]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform apply (dev)
        run: terraform apply -input=false -auto-approve -var-file="environments/dev.tfvars"
        